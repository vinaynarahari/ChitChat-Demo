/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "rnaudioapi.h"


@implementation NativeAudioAPIModuleSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_install(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, BooleanKind, "install", @selector(install), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_getDevicePreferredSampleRate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, NumberKind, "getDevicePreferredSampleRate", @selector(getDevicePreferredSampleRate), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_setAudioSessionActivity(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "setAudioSessionActivity", @selector(setAudioSessionActivity:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_setAudioSessionOptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "setAudioSessionOptions", @selector(setAudioSessionOptions:mode:options:allowHaptics:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_setLockScreenInfo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "setLockScreenInfo", @selector(setLockScreenInfo:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_resetLockScreenInfo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "resetLockScreenInfo", @selector(resetLockScreenInfo), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_enableRemoteCommand(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "enableRemoteCommand", @selector(enableRemoteCommand:enabled:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_observeAudioInterruptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "observeAudioInterruptions", @selector(observeAudioInterruptions:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_observeVolumeChanges(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "observeVolumeChanges", @selector(observeVolumeChanges:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_requestRecordingPermissions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "requestRecordingPermissions", @selector(requestRecordingPermissions:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_checkRecordingPermissions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "checkRecordingPermissions", @selector(checkRecordingPermissions:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAudioAPIModuleSpecJSI_getDevicesInfo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getDevicesInfo", @selector(getDevicesInfo:reject:), args, count);
    }

  NativeAudioAPIModuleSpecJSI::NativeAudioAPIModuleSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["install"] = MethodMetadata {0, __hostFunction_NativeAudioAPIModuleSpecJSI_install};
        
        
        methodMap_["getDevicePreferredSampleRate"] = MethodMetadata {0, __hostFunction_NativeAudioAPIModuleSpecJSI_getDevicePreferredSampleRate};
        
        
        methodMap_["setAudioSessionActivity"] = MethodMetadata {1, __hostFunction_NativeAudioAPIModuleSpecJSI_setAudioSessionActivity};
        
        
        methodMap_["setAudioSessionOptions"] = MethodMetadata {4, __hostFunction_NativeAudioAPIModuleSpecJSI_setAudioSessionOptions};
        
        
        methodMap_["setLockScreenInfo"] = MethodMetadata {1, __hostFunction_NativeAudioAPIModuleSpecJSI_setLockScreenInfo};
        
        
        methodMap_["resetLockScreenInfo"] = MethodMetadata {0, __hostFunction_NativeAudioAPIModuleSpecJSI_resetLockScreenInfo};
        
        
        methodMap_["enableRemoteCommand"] = MethodMetadata {2, __hostFunction_NativeAudioAPIModuleSpecJSI_enableRemoteCommand};
        
        
        methodMap_["observeAudioInterruptions"] = MethodMetadata {1, __hostFunction_NativeAudioAPIModuleSpecJSI_observeAudioInterruptions};
        
        
        methodMap_["observeVolumeChanges"] = MethodMetadata {1, __hostFunction_NativeAudioAPIModuleSpecJSI_observeVolumeChanges};
        
        
        methodMap_["requestRecordingPermissions"] = MethodMetadata {0, __hostFunction_NativeAudioAPIModuleSpecJSI_requestRecordingPermissions};
        
        
        methodMap_["checkRecordingPermissions"] = MethodMetadata {0, __hostFunction_NativeAudioAPIModuleSpecJSI_checkRecordingPermissions};
        
        
        methodMap_["getDevicesInfo"] = MethodMetadata {0, __hostFunction_NativeAudioAPIModuleSpecJSI_getDevicesInfo};
        
  }
} // namespace facebook::react
